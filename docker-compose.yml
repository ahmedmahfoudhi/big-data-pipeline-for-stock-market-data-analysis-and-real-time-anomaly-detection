version: '3'
networks:
  net:
    external: true

services:
  hdfs-namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: hdfs-namenode
    volumes:
      - ./hadoop-config/core-site.xml:/opt/hadoop-3.2.1/etc/hadoop/core-site.xml
      - ./hadoop-config/hdfs-site.xml:/opt/hadoop-3.2.1/etc/hadoop/hdfs-site.xml
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    ports:
      - "8020:8020"
    networks:
      - net

  hdfs-datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: hdfs-datanode
    volumes:
      - ./hadoop-config/core-site.xml:/opt/hadoop-3.2.1/etc/hadoop/core-site.xml
      - ./hadoop-config/hdfs-site.xml:/opt/hadoop-3.2.1/etc/hadoop/hdfs-site.xml
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      - SERVICE_PRECONDITION=hdfs-namenode:8020
    env_file:
      - ./hadoop.env
    networks:
      - net
    depends_on:
      - hdfs-namenode

  spark-master:
    image: bde2020/spark-master:3.1.1-hadoop3.2
    container_name: spark-master
    environment:
      - INIT_DAEMON_STEP=install
      - CORE_CONF_fs_defaultFS=hdfs://hdfs-namenode:8020
    ports:
      - "4040:4040"
      - "8080:8080"
      - "7077:7077"
    networks:
      - net

  spark-worker:
    image: bde2020/spark-worker:3.1.1-hadoop3.2
    container_name: spark-worker
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - CORE_CONF_fs_defaultFS=hdfs://hdfs-namenode:8020
    volumes:
      - ./spark-processors:/home
    networks:
      - net
    depends_on:
      - spark-master
      - hdfs-namenode
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - net
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    hostname: kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - net
    expose:
      - 9092
  cassandra:
    build:
      context: .
      dockerfile: Dockerfile.cassandra
    container_name: cassandra
    ports:
      - '9042:9042'
    networks:
      - net

  client:
    container_name: client
    build:
      context: .
      dockerfile: Dockerfile.client
    ports:
      - '9010:9010'
    networks:
      - net
  mongodb:
    image: mongo:latest
    container_name: mongo
    command: mongod --replSet myReplicaSet
    ports:
      - "27017:27017"
    networks:
      - net
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - MONGODB_URI=mongodb://mongo:27017/stock_market?replicaSet=myReplicaSet
    ports:
      - "3001:3001"
    networks:
      - net
    depends_on:
      - mongodb

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - BACKEND_URL=http://backend:3001
    ports:
      - '3000:3000'
    networks:
      - net
    depends_on:
      - backend
volumes:
  hadoop_namenode:
  hadoop_datanode:
